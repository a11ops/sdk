# Kubernetes deployment example with @a11ops/sdk
apiVersion: v1
kind: Secret
metadata:
  name: a11ops-secret
type: Opaque
data:
  # Base64 encoded API key: echo -n "your-api-key" | base64
  api-key: eW91ci1hcGkta2V5

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-app
  labels:
    app: my-app
spec:
  replicas: 3
  selector:
    matchLabels:
      app: my-app
  template:
    metadata:
      labels:
        app: my-app
    spec:
      containers:
      - name: app
        image: myregistry/my-app:latest
        ports:
        - containerPort: 3000
        env:
        # The SDK automatically picks up this environment variable
        - name: A11OPS_API_KEY
          valueFrom:
            secretKeyRef:
              name: a11ops-secret
              key: api-key
        - name: A11OPS_DEFAULT_WORKSPACE
          value: "production"
        # Optional: Pass pod metadata to your app
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5

---
apiVersion: v1
kind: Service
metadata:
  name: my-app-service
spec:
  selector:
    app: my-app
  ports:
    - protocol: TCP
      port: 80
      targetPort: 3000
  type: LoadBalancer

# Your application code:
# import { a11ops } from '@a11ops/sdk';
# 
# // Alert when pod starts
# await a11ops.info({
#   title: "Pod Started",
#   message: "Application ready",
#   metadata: {
#     pod: process.env.POD_NAME,
#     namespace: process.env.POD_NAMESPACE,
#     node: process.env.NODE_NAME
#   }
# });
# 
# // Alert on shutdown
# process.on('SIGTERM', async () => {
#   await a11ops.warning("Pod Terminating", process.env.POD_NAME);
#   await gracefulShutdown();
# });